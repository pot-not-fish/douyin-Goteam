// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package server

import (
	"context"

	"douyin/apps/rpc/video/internal/logic"
	"douyin/apps/rpc/video/internal/svc"
	"douyin/apps/rpc/video/types/video"
)

type MessageServer struct {
	svcCtx *svc.ServiceContext
	video.UnimplementedMessageServer
}

func NewMessageServer(svcCtx *svc.ServiceContext) *MessageServer {
	return &MessageServer{
		svcCtx: svcCtx,
	}
}

func (s *MessageServer) VideoList(ctx context.Context, in *video.VideoListReq) (*video.VideoListResp, error) {
	l := logic.NewVideoListLogic(ctx, s.svcCtx)
	return l.VideoList(in)
}

func (s *MessageServer) VideoFeed(ctx context.Context, in *video.VideoFeedReq) (*video.VideoFeedResp, error) {
	l := logic.NewVideoFeedLogic(ctx, s.svcCtx)
	return l.VideoFeed(in)
}

func (s *MessageServer) VideoFavorite(ctx context.Context, in *video.VideoFavoriteReq) (*video.VideoFavoriteResp, error) {
	l := logic.NewVideoFavoriteLogic(ctx, s.svcCtx)
	return l.VideoFavorite(in)
}

func (s *MessageServer) VideoFavorList(ctx context.Context, in *video.VideoFavorListReq) (*video.VideoFavorListResp, error) {
	l := logic.NewVideoFavorListLogic(ctx, s.svcCtx)
	return l.VideoFavorList(in)
}

func (s *MessageServer) CommentAction(ctx context.Context, in *video.CommentActionReq) (*video.CommentActionResp, error) {
	l := logic.NewCommentActionLogic(ctx, s.svcCtx)
	return l.CommentAction(in)
}

func (s *MessageServer) CommentList(ctx context.Context, in *video.CommentListReq) (*video.CommentListResp, error) {
	l := logic.NewCommentListLogic(ctx, s.svcCtx)
	return l.CommentList(in)
}
