// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"douyin/apps/rpc/user/internal/logic"
	"douyin/apps/rpc/user/internal/svc"
	"douyin/apps/rpc/user/types/user"
)

type MessageServer struct {
	svcCtx *svc.ServiceContext
	user.UnimplementedMessageServer
}

func NewMessageServer(svcCtx *svc.ServiceContext) *MessageServer {
	return &MessageServer{
		svcCtx: svcCtx,
	}
}

func (s *MessageServer) Register(ctx context.Context, in *user.RegisterReq) (*user.RegisterResp, error) {
	l := logic.NewRegisterLogic(ctx, s.svcCtx)
	return l.Register(in)
}

func (s *MessageServer) Login(ctx context.Context, in *user.LoginReq) (*user.LoginResp, error) {
	l := logic.NewLoginLogic(ctx, s.svcCtx)
	return l.Login(in)
}

func (s *MessageServer) Userinfo(ctx context.Context, in *user.UserinfoReq) (*user.UserinfoResp, error) {
	l := logic.NewUserinfoLogic(ctx, s.svcCtx)
	return l.Userinfo(in)
}
